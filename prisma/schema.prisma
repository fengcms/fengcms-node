// ./prisma/schema.prisma 文件为 Prisma 数据模型定义文件，在本系统中，是使用 TypeScript 生成的。
// 请勿直接修改该配置文件，如果需要调整数据模型，请修改 src/model.ts
// 之后执行 npm run build:model 重新生成 schema.prisma 文件
// 升级后请执行 npx prisma migrate dev 同步到数据库

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:123456@localhost:3306/fengcms"
}


// 以下数据为 enums 枚举类型定义

enum STATUS {
  NORMAL
  PENDING
  DELETE
  FORBIDDEN
}

enum EDITOR {
  RICHTEXT
  MARKDOWN
}

enum GENDER {
  MAN
  WOMAN
}


// 以下数据为 models 数据模型定义

model Article {
  id              Int             @id @default(autoincrement())
  title           String          @db.VarChar(255)
  channel_id      Int
  description     String?         @db.Text()
  tags            String?         @db.Text()
  content         String?         @db.LongText()
  markdown        String?         @db.LongText()
  img             String?         @db.VarChar(255)
  video           String?         @db.VarChar(255)
  author          String?         @db.VarChar(255)
  origin          String?         @db.VarChar(255)
  editor          String?         @db.VarChar(255)
  user_id         Int?
  istop           Int             @default(0)
  hits            Int             @default(0)
  type            String?         @db.VarChar(255)
  status          STATUS          @default(NORMAL)
  time            DateTime        @default(now())
}

model Log {
  id              Int             @id @default(autoincrement())
  type            String          @db.VarChar(255)
  role            String          @db.VarChar(255)
  mark            String?         @db.Text()
  user_id         Int
  time            DateTime        @default(now())
}

model Single {
  id              Int             @id @default(autoincrement())
  title           String          @db.VarChar(255)
  tags            String?         @db.Text()
  content         String?         @db.LongText()
  markdown        String?         @db.LongText()
  hits            Int             @default(0)
  status          STATUS          @default(NORMAL)
  time            DateTime        @default(now())
}

model Channel {
  id              Int             @id @default(autoincrement())
  pid             Int             @default(0)
  name            String          @db.VarChar(255)
  sort            Int             @default(0)
  keywords        String?         @db.Text()
  description     String?         @db.Text()
  status          STATUS          @default(NORMAL)
  img             String?         @db.VarChar(255)
  website         String?         @db.VarChar(255)
  time            DateTime        @default(now())
}

model Manages {
  id              Int             @id @default(autoincrement())
  account         String          @db.VarChar(255)
  password        String          @db.VarChar(255)
  salt            String          @db.VarChar(255)
  name            String?         @db.VarChar(255)
  avatar          String?         @db.VarChar(255)
  mark            String?         @db.Text()
  editor          EDITOR          @default(RICHTEXT)
  mobile          String?         @db.VarChar(255)
  email           String?         @db.VarChar(255)
  time            DateTime        @default(now())
}

model Site {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  title           String?         @db.VarChar(255)
  logo            String?         @db.VarChar(255)
  keywords        String?         @db.Text()
  description     String?         @db.Text()
  copyright       String?         @db.Text()
  time            DateTime        @default(now())
}

model Author {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  avatar          String?         @db.VarChar(255)
  mark            String?         @db.Text()
  editor          EDITOR          @default(RICHTEXT)
  mobile          String?         @db.VarChar(255)
  email           String?         @db.VarChar(255)
  website         String?         @db.VarChar(255)
  time            DateTime        @default(now())
}

model Origin {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  logo            String?         @db.VarChar(255)
  contact         String?         @db.VarChar(255)
  mark            String?         @db.Text()
  mobile          String?         @db.VarChar(255)
  email           String?         @db.VarChar(255)
  website         String?         @db.VarChar(255)
  time            DateTime        @default(now())
}

model Editor {
  id              Int             @id @default(autoincrement())
  account         String          @db.VarChar(255)
  password        String          @db.VarChar(255)
  salt            String          @db.VarChar(255)
  name            String?         @db.VarChar(255)
  avatar          String?         @db.VarChar(255)
  mark            String?         @db.Text()
  editor          EDITOR          @default(RICHTEXT)
  mobile          String?         @db.VarChar(255)
  email           String?         @db.VarChar(255)
  website         String?         @db.VarChar(255)
  time            DateTime        @default(now())
}

model User {
  id              Int             @id @default(autoincrement())
  account         String          @db.VarChar(255)
  password        String          @db.VarChar(255)
  salt            String          @db.VarChar(255)
  name            String?         @db.VarChar(255)
  avatar          String?         @db.VarChar(255)
  mark            String?         @db.Text()
  signature       String?         @db.Text()
  gender          GENDER?         @default(MAN)
  editor          EDITOR?         @default(RICHTEXT)
  mobile          String?         @db.VarChar(255)
  email           String?         @db.VarChar(255)
  website         String?         @db.VarChar(255)
  status          STATUS?         @default(PENDING)
  time            DateTime        @default(now())
}

model Tags {
  id              Int             @id @default(autoincrement())
  tags            String          @db.VarChar(255)
  channel_id      Int
  hits            Int             @default(0)
  time            DateTime        @default(now())
}

model Show {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  mark            String?         @db.Text()
  link            String          @db.VarChar(255)
  img             String?         @db.VarChar(255)
  status          STATUS          @default(PENDING)
  time            DateTime        @default(now())
}

model Links {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  logo            String?         @db.VarChar(255)
  link            String          @db.VarChar(255)
  mark            String?         @db.Text()
  sort            Int             @default(0)
  time            DateTime        @default(now())
}


